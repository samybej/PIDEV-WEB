<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_assetic_b9d69e8' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'b9d69e8',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/fp_js_formvalidator.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_liste_covoiturage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiController::getOffresDuClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/covoiturages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_liste_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiReservationController::getReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ajout_reservation' => array (  0 =>   array (    0 => 'depart',    1 => 'arrive',    2 => 'id_chauffeur',    3 => 'idClient',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiReservationController::addReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_chauffeur',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'arrive',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'depart',    ),    4 =>     array (      0 => 'text',      1 => '/api/ajoutReservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ajout_covoiturage' => array (  0 =>   array (    0 => 'nbPlace',    1 => 'depart',    2 => 'arrive',    3 => 'date',    4 => 'time',    5 => 'tarif',    6 => 'idOffreur',    7 => 'vehicule',    8 => 'bagage',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiController::addCovoiturageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'bagage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'vehicule',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOffreur',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tarif',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'time',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'date',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'arrive',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'depart',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbPlace',    ),    9 =>     array (      0 => 'text',      1 => '/api/ajoutCovoiturages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_statistiques' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiController::statistiquesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/statistiquesCov',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_liste_client' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiLoginController::listClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_client' => array (  0 =>   array (    0 => 'email',    1 => 'password',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiLoginController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'email',    ),    2 =>     array (      0 => 'text',      1 => '/api/getClient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_client' => array (  0 =>   array (    0 => 'nom',    1 => 'prenom',    2 => 'tel',    3 => 'mail',    4 => 'mdp',    5 => 'adresse',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiLoginController::addClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'adresse',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mdp',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mail',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tel',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prenom',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    6 =>     array (      0 => 'text',      1 => '/api/addclient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ajout_type' => array (  0 =>   array (    0 => 'vitesse',    1 => 'nbrArrets',    2 => 'tmpArret',    3 => 'idOffre',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiTypeController::addTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOffre',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tmpArret',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbrArrets',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'vitesse',    ),    4 =>     array (      0 => 'text',      1 => '/api/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rechercher_covoiturage' => array (  0 =>   array (    0 => 'date',    1 => 'depart',    2 => 'arrive',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiController::rechercherCovoiturageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'arrive',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'depart',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'date',    ),    3 =>     array (      0 => 'text',      1 => '/api/rechercherCovoiturage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_inscri_covoiturage' => array (  0 =>   array (    0 => 'idOffre',    1 => 'idClient',    2 => 'idOffreur',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiController::InscriptionCovoiturageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOffreur',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOffre',    ),    3 =>     array (      0 => 'text',      1 => '/api/inscriCovoiturage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_liste_formation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FormationController::getlistFormationByClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/formation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_list_formation2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FormationController::getlistFormationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/listformation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_Participer' => array (  0 =>   array (    0 => 'idChauffeur',    1 => 'idFormation',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FormationController::addParticipationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idFormation',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idChauffeur',    ),    2 =>     array (      0 => 'text',      1 => '/api/participer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_Postuler' => array (  0 =>   array (    0 => 'nom',    1 => 'prenom',    2 => 'cin',    3 => 'numPermis',    4 => 'experience',    5 => 'tel',    6 => 'langue',    7 => 'idClient',    8 => 'sexe',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FormationController::addPostulationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sexe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'langue',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tel',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'experience',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'numPermis',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cin',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prenom',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    9 =>     array (      0 => 'text',      1 => '/api/postuler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_note' => array (  0 =>   array (    0 => 'note',    1 => 'idClient',    2 => 'idChauffeur',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ApiNoteController::addNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idChauffeur',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    3 =>     array (      0 => 'text',      1 => '/api/noter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_reclamation' => array (  0 =>   array (    0 => 'description',    1 => 'aPropos',    2 => 'idClient',    3 => 'idChauffeur',  ),  1 =>   array (    '_controller' => 'ApiBundle:ApiReclamation:addReclamation',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idChauffeur',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'aPropos',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'description',    ),    4 =>     array (      0 => 'text',      1 => '/api/reclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\FormationController::listFormationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formation/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\FormationController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formation/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\FormationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/formation/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\FormationController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/formation/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theemes_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\TheemesController::listFormationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formation/listtheemes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theemes_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\TheemesController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formation/addtheemes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theemes_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\TheemesController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/formation/deletetheemes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theemes_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\TheemesController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/formation/updatetheemes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formation_listFront' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\FormationController::listFormation1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/formation/list1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\FormationController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/formation/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Postulation_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormationBundle\\Controller\\PostulationController::listPostulationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formation/listpostulation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'back_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::backAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Back/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxis_back' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::taxisAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Back/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxibackshow' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::taxiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/showT',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/Back',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'transports_back' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::transportsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Back/transport',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'transportbackshow' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::transportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/showTr',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/Back',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_reservation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::reservations_allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Back/reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'type_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TypeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'type_ajout' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TypeBundle\\Controller\\TypeController::AjoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ajout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'type_modifier' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TypeBundle\\Controller\\TypeController::ModifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscriptions_covoiturage_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'InscriptionsCovoiturageBundle\\Controller\\InscriptionsCovoiturageController::RechercherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/InscriptionsCovoiturage/rechercher',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_inscription' => array (  0 =>   array (    0 => 'id_offre',    1 => 'id_conducteur',  ),  1 =>   array (    '_controller' => 'InscriptionsCovoiturageBundle\\Controller\\InscriptionsCovoiturageController::AjoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_conducteur',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_offre',    ),    2 =>     array (      0 => 'text',      1 => '/InscriptionsCovoiturage/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscriptions_covoiturage_resultat' => array (  0 =>   array (    0 => 'departLower',    1 => 'arriveLower',    2 => 'newDate',  ),  1 =>   array (    '_controller' => 'InscriptionsCovoiturageBundle\\Controller\\InscriptionsCovoiturageController::ResultatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'newDate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'arriveLower',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'departLower',    ),    3 =>     array (      0 => 'text',      1 => '/InscriptionsCovoiturage/resultat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscriptions_covoiturage_supprimer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'InscriptionsCovoiturageBundle\\Controller\\InscriptionsCovoiturageController::SupprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/InscriptionsCovoiturage/annuler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscriptions_covoiturage_mesinscriptions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'InscriptionsCovoiturageBundle\\Controller\\InscriptionsCovoiturageController::ListInscriptionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/InscriptionsCovoiturage/mesInscriptions/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscriptions_covoiturage_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'InscriptionsCovoiturageBundle\\Controller\\InscriptionsCovoiturageController::DetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/InscriptionsCovoiturage/details',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'garage_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GarageBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/garage/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'garage_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GarageBundle\\Controller\\GarageController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/garage/addVtoG',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TaxiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/taxi/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_reservation_taxi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TaxiBundle\\Controller\\DefaultController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/taxi/ajout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_modifier' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TaxiBundle\\Controller\\DefaultController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/taxi/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TaxiBundle\\Controller\\DefaultController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TaxiBundle\\Controller\\DefaultController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'note_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoteBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/note/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'note_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoteBundle\\Controller\\NoteController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/note/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'note_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoteBundle\\Controller\\NoteController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/note/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'note_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'NoteBundle\\Controller\\NoteController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/note/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'note_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'NoteBundle\\Controller\\NoteController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/note/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'transport_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\ReservationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\ReservationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/reservation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\ReservationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\ReservationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/reservation/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\ReservationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\ReservationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meuble_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntitiesBundle:Meuble:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/meuble/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meuble_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\MeubleController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/meuble',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meuble_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\MeubleController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/meuble/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meuble_newRes' => array (  0 =>   array (    0 => 'res',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\MeubleController::newResAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'res',    ),    1 =>     array (      0 => 'text',      1 => '/transport/meuble/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meuble_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\MeubleController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/meuble',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meuble_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\MeubleController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/meuble',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vehicule_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VehiculeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/vehicule/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vehicule_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VehiculeBundle\\Controller\\VehiculeController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/vehicule/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vehicule_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VehiculeBundle\\Controller\\VehiculeController::listVehiculeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/vehicule/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vehicule_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'VehiculeBundle\\Controller\\VehiculeController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/vehicule/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vehicule_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'VehiculeBundle\\Controller\\VehiculeController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/vehicule/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'entities_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntitiesBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entities/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/covoiturage/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_ajout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::AjoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/covoiturage/ajout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_modifier' => array (  0 =>   array (    0 => 'offree',    1 => 'i',  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::ModifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'i',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'offree',    ),    2 =>     array (      0 => 'text',      1 => '/covoiturage/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_liste' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::ReadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/covoiturage/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_supprimer' => array (  0 =>   array (    0 => 'id',    1 => 'i',  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::SupprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'i',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/covoiturage/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_statistiques' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::StatistiquesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/covoiturage/statistiques',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_erreur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::ErreurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/covoiturage/erreur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_bloquer' => array (  0 =>   array (    0 => 'offree',  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::setAvertissementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'offree',    ),    1 =>     array (      0 => 'text',      1 => '/covoiturage/bloquer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'covoiturage_bloquer_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CovoiturageBundle\\Controller\\CovoiturageController::setAvertissementDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/covoiturage/bloquerE',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accueil/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:newThreadsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_edit_thread_commentable' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:editThreadCommentableAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/commentable/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:newThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_remove_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:removeThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_edit_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:editThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:newThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:getThreadAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:getThreadsActions',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:postThreadsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_patch_thread_commentable' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:patchThreadCommentableAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/commentable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:getThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'commentId',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_patch_thread_comment_state' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:patchThreadCommentStateAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/state',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_put_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:putThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'commentId',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:getThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:postThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:getThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'fos_comment.controller.thread:postThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fp_js_form_validator.check_unique_entity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Fp\\JsFormValidatorBundle\\Controller\\AjaxController::checkUniqueEntityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fp_js_form_validator/check_unique_entity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
